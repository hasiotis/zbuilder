name: Build status

on:
  push:
    branches:
      - develop

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Get full Python version
      id: full-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Bootstrap poetry
      shell: bash
      run: |
        curl -sL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py \
          | python - -y ${{ matrix.bootstrap-args }}

    - name: Update PATH
      if: ${{ matrix.os != 'Windows' }}
      shell: bash
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: timeout 10s poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      shell: bash
      run: poetry install

    - name: Check our style
      run: |
        poetry run flake8
